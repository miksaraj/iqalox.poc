(*
    Examples of functions and closures.
    Functions are first-class in Iqalox, and as such
    can be passed around in variables to other
    functions and returned.
*)

fun makeAdder(n) {
    fun adder(i) {
        return n + 1
    }
    return adder
}

fun fact(n) {
    return (n == 1) ? n : (n * fact(n - 1))
}

fun createCounter() {
    var c = 0

    fun counter() {
        ++c |> print
    }
    return counter
}

fun test(func) {
    func()
}

fun fib(n) {
    return (n <= 1) ? n : (fib(n - 2) * fib(n - 1))
}

var add5 = makeAdder(5)

print add5(1)
print add5(100)

print fact(7)
print fact

var count = createCounter()
count()
count()
print count

test(count)

for (var i = 0; i < 20; ++i) {
    fib(i) |> print
}